############################################ Plugins ###############################################
[[plugins]]
repo = 'justinmk/vim-sneak'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-surround'
merged = 0

# [[plugins]]
# repo = 'jiangmiao/auto-pairs'
# merged = 0
# hook_add = '''
# " let g:AutoPairsFlyMode = 1
# '''

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'kshenoy/vim-signature'

[[plugins]] # gitをvimから使う
repo ='tpope/vim-fugitive'

[[plugins]]
repo = 'yggdroot/indentline'
hook_add = '''
let g:indentLine_color_gui = "#555555"
autocmd BufNewFile,BufRead *.tex let g:indentLine_color_gui = "#888888"
autocmd BufNewFile,BufRead *.tex hi Statement guifg=#ff4477
let g:indentLine_char = '┊'
let g:indentLine_conceallevel=1
let g:indentLine_concealcursor=""
set conceallevel=1
set concealcursor-=incv
autocmd FileType tex let g:indentLine_enabled=0
'''

############################################## Startify ############################################
[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''
function! s:nerdtreeBookmarks()
    let bookmarks = systemlist("cut -d' ' -f 2- ~/.NERDTreeBookmarks")
    let bookmarks = bookmarks[0:-2] " Slices an empty last line
    return map(bookmarks, "{'line': v:val, 'path': v:val}")
endfunction
let g:startify_enable_special      = 1
let g:startify_files_number        = 10
let g:startify_relative_path       = 1
let g:startify_change_to_dir       = 1
let g:startify_update_oldfiles     = 1
let g:startify_session_autoload    = 1
let g:startify_session_persistence = 1
let g:startify_skiplist = [
        \ 'COMMIT_EDITMSG',
        \ 'bundle/.*/doc',
        \ '/data/repo/neovim/runtime/doc',
        \ '/Users/mhi/local/vim/share/vim/vim74/doc',
        \ ]
let g:startify_bookmarks = [
        \ ]
let g:startify_custom_header = ['']
let g:startify_custom_footer = ['', "", '']
let g:startify_lists = [
      \ { 'type': function('s:nerdtreeBookmarks'), 'header': ['   NERDTree Bookmarks']},
      \ { 'type': 'files',     'header': ['   MRU']            },
      \ { 'type': 'sessions',  'header': ['   Sessions']       },
      \ { 'type': 'bookmarks', 'header': ['   Bookmarks']      },
      \ { 'type': 'commands',  'header': ['   Commands']       },
      \ ]
hi StartifyBracket ctermfg=240
hi StartifyFile    ctermfg=147
hi StartifyFooter  ctermfg=240
hi StartifyHeader  ctermfg=114
hi StartifyNumber  ctermfg=215
hi StartifyPath    ctermfg=245
hi StartifySlash   ctermfg=240
hi StartifySpecial ctermfg=240
'''

############################################## Airline #############################################
[[plugins]] # Airlineのテーマ
repo = 'vim-airline/vim-airline-themes'

[[plugins]] # ステータスラインの装飾
repo = 'vim-airline/vim-airline'
hook_add = '''
" let g:airline#extensions#bufferline#enabled = 1
" let g:airline#extensions#denite#enabled = 1
let g:airline#extensions#wordcount#enabled = 0
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#default#layout = [[ 'a', 'b', 'c' ], [ 'x', 'y', 'z' ]] ", 'error', 'warning']]
let g:airline#extensions#fzf#enabled = 1
let g:airline#extensions#fugitiveline#enabled = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#tabline#close_symbol = 'X'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter ='default'
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#right_alt_sep = ''
let g:airline#extensions#tabline#right_sep = ' '
let g:airline#extensions#tabline#show_close_button = 1
let g:airline_detect_modified=1
let g:airline_left_alt_sep = ''
let g:airline_left_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_section_error = airline#section#create([' ' . '%{youcompleteme#GetErrorCount()}'])
let g:airline_section_warning = airline#section#create([' ' . '%{youcompleteme#GetWarningCount()}'])
let g:airline_stl_path_style = 'short'
let g:airline_theme = 'minimalist' " minimalist''gruvbox'  ubaryd, understated violet solalized
set laststatus=2                " 下のステータスライン
set noshowmode                  " デフォルトのステータスラインを消す
set showtabline=2
set statusline=2                " ステータスラインの記述
'''
############################################## Snippetd ############################################
[[plugins]]
repo = 'honza/vim-snippets'
merged = 0

[[plugins]]
repo = 'SirVer/ultisnips'
merged = 0
depends = 'vim-snippets'
hook_add = '''
'''

############################################## NerdTree ############################################
[[plugins]] # アイコンの表示
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = "Xuyuanp/nerdtree-git-plugin"
hook_add = '''
let g:NERDTreeGitStatusIndicatorMapCustom = {
                \ 'Modified'  :'✹',
                \ 'Staged'    :'✚',
                \ 'Untracked' :'✭',
                \ 'Renamed'   :'➜',
                \ 'Unmerged'  :'═',
                \ 'Deleted'   :'✖',
                \ 'Dirty'     :'✗',
                \ 'Ignored'   :'☒',
                \ 'Clean'     :'✔︎',
                \ 'Unknown'   :'?',
                \ }
'''

[[plugins]] # ファイルツリーの表示
repo = "preservim/nerdtree"
depends = ['vim-devicons', 'nerdtree-git-plugin']
hook_add = '''
let g:NERDTreeLimitedSyntax = 1
'''

########################################### YouCompleteMe ##########################################
[[plugins]]
repo = 'valloric/youcompleteme'
merged = 0
hook_add = '''
let g:ycm_use_clangd = 1
let g:ycm_show_diagnostics_ui = 1
let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
let g:ycm_extra_conf_globlist = ['/Users/fujimotogen/Garage/bamboo/control/*',
                               \ '/Users/fujimotogen/Home/*']
let g:ycm_auto_hover='CursorHold'
let g:ycm_show_diagnostics_ui = 1
let g:ycm_error_symbol = ''
let g:ycm_warning_symbol = ''
augroup MyYCMCustom
  autocmd!
  autocmd FileType c,cpp let b:ycm_hover = {'command': 'GetDoc', 'syntax': &filetype}
augroup END
'''

################################################ FZF ###############################################
[[plugins]]
repo = 'yuki-yano/fzf-preview.vim'
merged = 0
rev = 'release/remote'
# depends = ['fzf', 'fzf.vim']
hook_add = '''
" let g:fzf_preview_floating_window_rate = 0.95
" let g:fzf_preview_direct_window_option = ''
" let g:fzf_preview_default_fzf_options = { '--reverse': v:true, '--preview-window': 'wrap' }
let g:fzf_preview_quit_map = 1
let g:fzf_preview_buffers_jump = 1
" let g:fzf_preview_if_binary_command = '[[ "$(file --mime {})" =~ binary ]]'
let g:fzf_binary_preview_command = 'echo "{} is a binary file"'
let g:fzf_preview_git_files_command = 'git ls-files --exclude-standard'
let g:fzf_preview_directory_files_command = 'fd --hidden --follow --exclude .git'
let g:fzf_preview_git_status_command = 'git -c color.status=always status --short --untracked-files=all'
let g:fzf_preview_grep_cmd = 'rg --line-number --no-heading --color=never'
let g:fzf_preview_mru_limit = 1000
let g:fzf_preview_lines_command = 'bat --color=always --plain --number' " Installed bat
let g:fzf_preview_grep_preview_cmd = expand('<sfile>:h:h') . '/bin/preview_fzf_grep'
let g:fzf_preview_cache_directory = expand('~/.cache/vim/fzf_preview')
let g:fzf_preview_fzf_color_option = 'border:#aaaaaa,pointer:#ffffff,bg+:#006400'
let g:fzf_preview_use_dev_icons = 1
let g:fzf_preview_dev_icon_prefix_string_length = 3
let g:fzf_preview_dev_icons_limit = 5000
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
merged = 0
hook_add = '''
let g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,
                  \ 'yoffset':0.5,'xoffset': 0.5, 'highlight': 'Todo', 'border': 'sharp' } }
'''

[[plugins]]
repo = 'junegunn/fzf'
merged = 0
ruild = './install --all'
